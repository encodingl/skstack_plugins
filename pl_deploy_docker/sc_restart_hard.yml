- hosts: "{{ hosts }}"
  gather_facts: no
  serial: "{{ Serial }}"
  tasks:
    - name:  step:1/3:Get the DockerAppId which is running. TaskId:"{{ TaskId }}".
      shell: docker ps|egrep '{{ DockerApp }}(\ |:|-20)'|awk '{print $1}'
      register: DockerAppId
    - name: step:2/3:Docker app stop. TaskId:"{{ TaskId }}".
      command: docker stop "{{ DockerAppId.stdout }}"
      register: msg2
      failed_when: "'FAILED' in msg2.stderr"
    - name:  step:3/3:Docker app start.TaskId:"{{ TaskId }}".
      command: docker start "{{ DockerAppId.stdout }}"


    - name: step:healthcheck:LoopEurekaHealthCheck until successful, max time(2min).TaskId:"{{ TaskId }}".please wait patiently ...... 
      script: sc_eureka_health_check.sh "{{ EurekaUrl }}" "{{ AppSpringName }}" "{{ MaxCheckTime }}"
      tags: eureka


